CREATE TABLE User( 
	id int NOT NULL AUTO_INCREMENT,
	username varchar(20) NOT NULL, 
	password varchar(20) NOT NULL,
	univId int, 
	PRIMARY KEY (id),
	FOREIGN KEY (univId) REFERENCES University(id)
);

CREATE TABLE University(
	id INT NOT NULL AUTO_INCREMENT,
	name VARCHAR(20) NOT NULL, 
	numStudents INT,
	description TEXT,
	location VARCHAR(100),
	ownerId INT UNIQUE, 
	PRIMARY KEY (id),
	FOREIGN KEY (ownerId) REFERENCES SuperAdmin(id)
	
);

CREATE TABLE SuperAdmin(
	id INT NOT NULL, 
	PRIMARY KEY (id),	
	FOREIGN KEY (id) REFERENCES User(id)
);

CREATE TABLE Admin(
	id INT NOT NULL, 
	PRIMARY KEY (id),
	FOREIGN KEY (id) REFERENCES User(id)
);

CREATE TABLE Event(
	id INT NOT NULL AUTO_INCREMENT,
	name VARCHAR(20) NOT NULL,
	category VARCHAR(20),
	description TEXT,
	time TIME, 
	date DATE,
	location VARCHAR(100),
	phoneNumber VARCHAR(20),
	email VARCHAR(320),
	type ENUM('public', 'private', 'rso'),
	rsoId INT,
	univId INT NOT NULL, 
	adminId INT NOT NULL,
	PRIMARY KEY (id),
	FOREIGN KEY (univId) REFERENCES University(id),
	FOREIGN KEY (adminId) REFERENCES Admin(id),
	FOREIGN KEY (rsoId) REFERENCES RSO(id)
);

CREATE TABLE RSO(
	id INT NOT NULL AUTO_INCREMENT,
	name VARCHAR(20) NOT NULL,
	adminId INT NOT NULL,
	PRIMARY KEY (id),
	FOREIGN KEY (adminId) REFERENCES Admin(id)
);

CREATE TABLE Comment(
	id INT NOT NULL AUTO_INCREMENT,
	text TEXT,
	userId INT NOT NULL,
	eventId INT NOT NULL,
	PRIMARY KEY (id),
	FOREIGN KEY (userId) REFERENCES User(id),
	FOREIGN KEY (eventId) REFERENCES Event(id)
);

CREATE TABLE IsInRSO(
	id INT NOT NULL AUTO_INCREMENT,
	userId INT NOT NULL,
	rsoId INT NOT NULL,
	PRIMARY KEY (id),
	FOREIGN KEY (userId) REFERENCES User(id),
	FOREIGN KEY (rsoId) REFERENCES RSO(id)
);

CREATE TRIGGER AfterRSOInsert BEFORE INSERT
ON RSO
FOR EACH ROW
INSERT INTO Admin (id)
VALUES (NEW.adminId);

DELIMITER //
CREATE TRIGGER BeforeAdminDelete BEFORE DELETE 
ON Admin 
FOR EACH ROW
BEGIN 
	DELETE FROM IsInRSO i WHERE EXISTS (SELECT *
							    	 FROM RSO r
								 WHERE r.adminId = OLD.id
								 AND r.id = i.rsoId);
	DELETE FROM RSO WHERE adminId = OLD.id; 

END;
//
DELIMITER ;


INSERT INTO University (name) VALUES ('UCF');

INSERT INTO RSO (name, adminId) VALUES ('Archery', 1);
INSERT INTO RSO (name, adminId) VALUES ('Chess', 2);
INSERT INTO Admin (id) VALUES (2);

INSERT INTO Event (name, category, description, time, date, location, number, email, type, rsoId, univId, adminId)
			VALUES ('bobshowcase', 'afd', ', '$time', '$date', '$location', '$number', '$email', '$type', '$rsoId', '$univId', '$userId')